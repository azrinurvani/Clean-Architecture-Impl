plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.kapt'
}

android {
    namespace 'com.azrinurvani.mobile.learncleanarchitecture'
    compileSdk 34

    defaultConfig {
        applicationId "com.azrinurvani.mobile.learncleanarchitecture"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    flavorDimensions FLAVOR_DIMENSION
    productFlavors{
        development{
            dimension FLAVOR_DIMENSION
            buildConfigField 'String', 'BASE_URL', BASE_URL_DEV
            buildConfigField 'String', 'API_KEY', API_KEY_DEV
            applicationIdSuffix ".dev"
            manifestPlaceholders = [appLabel: APP_LABEL_DEV, icon : APP_ICON_DEV]
        }
        production{
            dimension FLAVOR_DIMENSION
            buildConfigField 'String', 'BASE_URL', BASE_URL_PROD
            buildConfigField 'String', 'API_KEY', API_KEY_PROD
            applicationIdSuffix ".prod"
            manifestPlaceholders = [appLabel: APP_LABEL_PROD, icon : APP_ICON_PROD]
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        buildConfig true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }


}

dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    //UI
    implementation 'androidx.appcompat:appcompat:1.6.1'

    def materialUIVersion = "1.10.0"
    
    implementation "com.google.android.material:material:$materialUIVersion"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    //Utilities
    implementation "com.github.bumptech.glide:glide:4.16.0"
    implementation "com.facebook.shimmer:shimmer:0.5.0"

    def daggerHiltVersion = "2.44"
    implementation "com.google.dagger:hilt-android:$daggerHiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$daggerHiltVersion"

    def roomVersion = '2.6.0'
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Retrofit
    def retrofitVersion = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Logging
    implementation 'com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.6'

    // Coroutine lifecycle scopes
    def lifeCycleScopeVersion = "2.6.2"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifeCycleScopeVersion"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifeCycleScopeVersion"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifeCycleScopeVersion"

    implementation "androidx.fragment:fragment-ktx:1.6.1"
}